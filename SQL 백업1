--SYSTEM 계정 접속 : 비번 manager (새로운쿼리탭들어가기:해당계정우클릭-SQL편집기-최근SQL편집기 클릭)
--계정 생성
--CREATE USER webdb IDENTIFIED BY 1234; --비번이 12341

--접속, 리소스 사용 권한부여
--GRANT resource, CONNECT TO webdb;

--■ 테이블명 수정
--RENAME book TO article;
--■ 테이블 삭제 : 참고로 SQL에서는 삭제가 DROP이다!
--DROP TABLE article;

--DDL-테이블관리
--■ 테이블 생성 (오라클 디비버로 파이썬 시각화 같이 표생성가능!)
--■ 테이블, 컬럼 명명 규칙/• 문자로 시작/• 30자 이내/• A-Z, a-z, 0-9, _, $, #/• 오라클 예약어는 사용할 수 없음
create table book(
book_id number(5),
title varchar2(50),
author varchar2(10),
pub_date date
);

create table author(
author_id number(10),
author_name varchar2(100),
author_desc varchar2(500),
pub_date date
);
SELECT * FROM author;

--■ author 테이블 만들기 : 실행 안되면 DROP TABLE '삭제할 테이블이름'; 실행하고 다시 해야한다!
--테이블이 이어지니 테이블 author를 만들었으면 실행해야 다음 테이블도 인식된다!
CREATE TABLE author (
author_id NUMBER(10),
author_name VARCHAR2(100) NOT NULL,
author_desc VARCHAR2(500),
PRIMARY KEY(author_id)
);

 --■ book 테이블 만들기
DROP TABLE book;--(엔티티 관계도에서 지워진거 확인가능하다.)
DROP TABLE author;

CREATE TABLE book (
book_id NUMBER(10),
title VARCHAR2(100) NOT NULL,
pubs VARCHAR2(100),
pub_date DATE,
author_id NUMBER(10),
PRIMARY KEY(book_id),
CONSTRAINT c_book_fk FOREIGN KEY (author_id)
REFERENCES author(author_id)
);

--DML-INSERT
--■ 묵시적 방법 : • 컬럼 이름, 순서 지정하지 않음. • 테이블 생성시 정의한 순서에 따라 값 지정
DROP TABLE author;
CREATE TABLE author (
  author_id    NUMBER(10),
  author_name    VARCHAR2(100)  NOT NULL,
  author_desc    VARCHAR2(500),
  PRIMARY     KEY(author_id)    
);
SELECT * FROM AUTHOR a ;

DROP TABLE book;
CREATE TABLE book (
  book_id     NUMBER(10),
  title     VARCHAR2(100) NOT NULL,
  pubs     VARCHAR2(100),
  pub_date     DATE,
  author_id NUMBER(10),
  PRIMARY     KEY(book_id),
  CONSTRAINT c_book_fk FOREIGN KEY (author_id)
  REFERENCES author(author_id)
);

INSERT INTO AUTHOR 
values(1,'박경리','토지 작가');

SELECT * FROM AUTHOR a ;

INSERT INTO AUTHOR(AUTHOR_ID, AUTHOR_NAME)
values(2,'이문열');

--DML-DELETE ■ 조건을 만족하는 레코드를 삭제
--DELETE FROM author
--WHERE author_id = 1 ;

--■ 조건이 없으면 모든 데이터 삭제(주의)
--DELETE FROM author ;

-- SEQUENCE(시퀀스) : • 연속적인 일련번호 생성àPK에 주로 사용됨 • 시퀀스 생성

DROP SEQUENCE seq_author_id;
CREATE SEQUENCE seq_author_id
INCREMENT BY 1
START WITH 1 ;
--조회 가능 : Select로
SELECT seq_author_id.nextval FROM dual;
SELECT seq_author_id.currval FROM dual;

DELETE FROM author; --시퀀스 지우기

INSERT INTO AUTHOR --시퀀스 사용
VALUES (seq_author_id.nextval, '박경리', '토지 작가 ' );
INSERT INTO author
VALUES (seq_author_id.nextval, '이문열', '삼국지 작가');
--Select로 결과 출력
SELECT * FROM author;


